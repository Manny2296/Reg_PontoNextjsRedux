{"ast":null,"code":"// lib/redux.js\nimport AddRegPonto from '../store/reducers/dataReducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist'; //import rootSaga from './saga';\n//import rootReducer from './reducer';\n\nexport default (function (initialState) {\n  var store; // const sagaMiddleware = createSagaMiddleware();\n\n  var isClient = true;\n\n  if (isClient) {\n    var _require = require('redux-persist'),\n        persistReducer = _require.persistReducer;\n\n    var storage = require('redux-persist/lib/storage')[\"default\"];\n\n    var persistConfig = {\n      key: 'root',\n      storage: storage\n    };\n    store = createStore(persistReducer(persistConfig, AddRegPonto), initialState);\n    store.__PERSISTOR = persistStore(store);\n  } else {\n    store = createStore(AddRegPonto, initialState);\n  } //store.sagaTask = sagaMiddleware.run(rootSaga);\n\n\n  return store;\n});","map":{"version":3,"sources":["C:/Users/Riano/Repo/RegistradorPonto/lib/redux.js"],"names":["AddRegPonto","createStore","applyMiddleware","createSagaMiddleware","persistStore","initialState","store","isClient","require","persistReducer","storage","persistConfig","key","__PERSISTOR"],"mappings":"AAAA;AAEA,OAAOA,WAAP,MAAwB,+BAAxB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;AACA;;AACA,gBAAe,UAACC,YAAD,EAAkB;AAC/B,MAAIC,KAAJ,CAD+B,CAEhC;;AACC,MAAMC,QAAQ,OAAd;;AACA,MAAIA,QAAJ,EAAc;AAAA,mBACeC,OAAO,CAAC,eAAD,CADtB;AAAA,QACJC,cADI,YACJA,cADI;;AAEZ,QAAMC,OAAO,GAAGF,OAAO,CAAC,2BAAD,CAAP,WAAhB;;AACA,QAAMG,aAAa,GAAG;AACpBC,MAAAA,GAAG,EAAE,MADe;AAEpBF,MAAAA,OAAO,EAAPA;AAFoB,KAAtB;AAIAJ,IAAAA,KAAK,GAAGL,WAAW,CACjBQ,cAAc,CAACE,aAAD,EAAgBX,WAAhB,CADG,EAEjBK,YAFiB,CAAnB;AAKCC,IAAAA,KAAK,CAACO,WAAN,GAAoBT,YAAY,CAACE,KAAD,CAAhC;AACF,GAbD,MAaO;AACLA,IAAAA,KAAK,GAAGL,WAAW,CACjBD,WADiB,EAEjBK,YAFiB,CAAnB;AAKD,GAvB8B,CAwB/B;;;AACA,SAAOC,KAAP;AACD,CA1BD","sourcesContent":["// lib/redux.js\r\n\r\nimport AddRegPonto from '../store/reducers/dataReducer'\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { persistStore } from 'redux-persist';\r\n//import rootSaga from './saga';\r\n//import rootReducer from './reducer';\r\nexport default (initialState) => {\r\n  let store;\r\n // const sagaMiddleware = createSagaMiddleware();\r\n  const isClient = typeof window !== 'undefined';\r\n  if (isClient) {\r\n    const { persistReducer } = require('redux-persist');\r\n    const storage = require('redux-persist/lib/storage').default;\r\n    const persistConfig = {\r\n      key: 'root',\r\n      storage\r\n    };\r\n    store = createStore(\r\n      persistReducer(persistConfig, AddRegPonto),\r\n      initialState,\r\n     \r\n    );\r\n     store.__PERSISTOR = persistStore(store);\r\n  } else {\r\n    store = createStore(\r\n      AddRegPonto,\r\n      initialState,\r\n     \r\n    );\r\n  }\r\n  //store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};"]},"metadata":{},"sourceType":"module"}