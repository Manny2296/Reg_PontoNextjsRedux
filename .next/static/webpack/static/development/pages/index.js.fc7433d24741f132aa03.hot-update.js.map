{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.fc7433d24741f132aa03.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Link from \"next/link\";\r\n\r\nimport Layout from \"../components/Layout\";\r\nimport { forwardRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Button, Box, TextField} from \"@material-ui/core\";\r\nimport React, { Component } from 'react';\r\n\r\nimport \"../components/index.scss\"\r\nimport \"../components/Table.scss\"\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {AlertDialog} from './alertDialog'\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  \r\n};\r\nconst stylebutton = {\r\n  background: 'linear-gradient(45deg, rgb(254, 107, 139) 30%, rgb(255, 142, 83) 90%)',\r\n  borderRadius: 3,\r\n  border: 0,\r\n  color: 'white',\r\n  width : '100%',\r\n  height: 38,\r\n  padding: '0 10px',\r\n  boxShadow: '0 2px 5px 2px rgba(255, 105, 135, .3)',\r\n // marginLeft: 20,\r\n // marginTop: 5,\r\n // marginRight: 20\r\n};\r\n\r\nclass Index extends Component {\r\n  static getInitialProps({store, isServer, pathname, query}) {\r\n    store.dispatch({type: 'ADD_REG_PONTO', payload:null\r\n    }); // component will be able to read from store's state when rendered\r\n    return {custom: 'custom'}; // you can pass some custom props to component from here\r\n}\r\n    constructor(props){\r\n    \r\n      super(props)\r\n\r\n       this.state = { \r\n         columns:[{title:\"Nome Empleado\", field:\"name\"},\r\n             {title:\"Numero Documento\", field:\"ndoc\"},\r\n             {title:\"Hora ingreso\", field:\"horaingreso\"},\r\n             {title:\"Hora saida\", field:\"horasalida\"}\r\n\r\n        ],\r\n        \r\n      data: this.props.data, \r\n      ndocUser: null,\r\n      useradd : null\r\n  }\r\n  this._handleNdocUserChange = this._handleNdocUserChange.bind(this);\r\n    }\r\n    \r\n   \r\n    _handleNdocUserChange(event){\r\n      console.log(\"Ndoc a batir ponto : \" + event.target.value)\r\n    this.setState({ndocUser : event.target.value})\r\n    }\r\n    _handleSaveUser(){\r\n      const {dispatch} = this.props;\r\n      if(this.state.ndocUser != null){\r\n        let numerodocumento = this.state.ndocUser\r\n        console.log(\"------> \" +numerodocumento);\r\n\r\n        let usuario_a_batir = this.state.data.filter(function(user){\r\n          return user.ndoc == numerodocumento\r\n        })\r\n        console.log(\"El ultimo en batir ponto\" + JSON.stringify(this.state.data[this.state.data.length-1].ndoc))\r\n      if(usuario_a_batir.length > 0){\r\n      // window.alert(\"Usuario encontrado\");\r\n        /*this.setState(\r\n          {useradd:[{\"name\":usuario_a_batir[0].name, \"ndoc\":usuario_a_batir[0].ndoc ,\"horaingreso\": \"00:00:00\", \"horasalida\":\"00:01:00\"}]}\r\n        )*/\r\n        var date = new Date().toLocaleString();\r\n        if( parseInt(JSON.stringify(this.state.data[this.state.data.length-1].ndoc)) == this.state.ndocUser){\r\n          let usertmp = this.state.data[this.state.data.length-1]\r\n          let aupdate =[{\"name\": usertmp.name, \"ndoc\": usertmp.ndoc,\"horaingreso\":usertmp.horaingreso, \"horasalida\":date}] \r\n          console.log(\"Es una acualizacion a la columna \" + usertmp)\r\n           this.setState(prevState => {\r\n            const data = [...prevState.data];\r\n            data[data.indexOf(usertmp)] = aupdate[0];\r\n            return { ...prevState, data };\r\n          });\r\n        }\r\n        else{\r\n          var date = new Date().toLocaleString();\r\n     //     console.log(date + \"------------------<<\")\r\n          let a_inserer = [{\"name\": usuario_a_batir[0].name, \"ndoc\": usuario_a_batir[0].ndoc,\"horaingreso\":date, \"horasalida\":\"--------\"}]\r\n          const action = { type: \"ADD_REG_PONTO\", payload: a_inserer[0]}\r\n          this.props.dispatch(action)\r\n          console.log(usuario_a_batir[0].name + \"---\" + usuario_a_batir[0].ndoc)\r\n        console.log(\"Ya execute\")\r\n          this.setState(prevState => {\r\n            const data = [...prevState.data];\r\n            data.push(a_inserer[0]);\r\n            return { ...prevState, data };\r\n          });\r\n        }\r\n \r\n      }\r\n      else{\r\n        window.alert(\"Usuario no encontrado,porfavor digite um Numero de Documento valido \");\r\n\r\n      }\r\n      }\r\n      else{\r\n       window.alert(\"Usuario no encontrado,porfavor digite um Numero de Documento valido \");\r\n      }\r\n \r\n    }\r\n    \r\n  render() {\r\n    //console.log(this.props)\r\n    //console.log(\"render element with props \" + JSON.stringify(this.props.data));\r\n    return (\r\n      <Layout>\r\n    \r\n    \r\n    \r\n      <h3 className=\"firstlbl\"> Bienvenido a MF.RegistroPonto </h3>\r\n     \r\n\r\n     <div> <Box className='containerDataBox' >\r\n          \r\n         <TextField  label=\"Numero de Documento\" onChange={this._handleNdocUserChange} />\r\n         <br/>\r\n         <Button  variant=\"contained\" style={stylebutton}  onClick={this._handleSaveUser.bind(this)} >Batir Ponto </Button>\r\n        \r\n       </Box>\r\n       </div>\r\n       <MaterialTable\r\n       icons={tableIcons}\r\n      title=\"Pontos batidos hoje\"\r\n      columns={this.state.columns}\r\n      data={this.state.data}\r\n      actions={[\r\n        {\r\n          icon: AccountCircleIcon,\r\n          tooltip: 'User Profile',\r\n          onClick: (event, rowData) => //alert(\"You saved \" + rowData.name)window.location.href\r\n          window.location.href = `/user/${rowData.ndoc}`\r\n           \r\n        }\r\n       ]}\r\n      editable={{\r\n       /* onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              this.setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                this.setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),*/\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              this.setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />  \r\n      \r\n    \r\n   \r\n    <a href=\"http://eco2.com.co\">\r\n    {/*<img className=\"imgstyle\"  src={require('../components/image/flower-2.png')}/>*/}\r\n    </a>\r\n    \r\n  </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n  (state) => state,\r\n \r\n)(Index);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAZA;AACA;AAaA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAVA;AAYA;AAhBA;AAiBA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;;;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAHA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AAzBA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAnKA;AACA;AA0KA;AACA;AAAA;;;;A","sourceRoot":""}